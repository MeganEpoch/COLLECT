pipeline {
    agent any

    stages {
        stage('maven package'){
            steps {
                sh "chmod +x mvnw"
                sh "./mvnw clean package"
            }
        }
        stage('maven build') {
            steps {
                //sh "chmod +x mvnw"
                sh "./mvnw install"
                junit 'target/surefire-reports/*.xml'
                step( [ $class: 'JacocoPublisher',
                    execPattern: 'target/*.exec',
                    classPattern: 'target/classes',
                    sourcePattern: 'src/main/java',
                    exclusionPattern: 'src/test*'
                        ] )
                    }
        }
        stage('docker image build') {
            steps {

            sh label: '', script: 'docker stop first-img'
            sh label: '', script: 'docker rm first-img'
            sh label: '', script: 'docker build -t first-img .'

            }
            post {
                failure{
                    updateGitlabCommitStatus name:'build',state:'failed'
                }
                success{
                    updateGitlabCommitStatus name:'build',state:'success'
                }
            }
        }
        stage('docker run') {
            steps {
                sh label: '', script: 'docker run -d --name first-img -p 8081:8081 first-img'
            }
            post {
                failure{
                    updateGitlabCommitStatus name:'run',state:'failed'
                }
                success{
                    updateGitlabCommitStatus name:'run',state:'success'
                }
            }
        }
    }
}